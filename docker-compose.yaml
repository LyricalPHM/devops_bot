version: '3.8'

services:
  bot:
    build:
      context: ./bot
    environment:
      - TOKEN=${TOKEN}
      - RM_HOST=${RM_HOST}
      - RM_PORT=${RM_PORT}
      - RM_USER=${RM_USER}
      - RM_PASSWORD=${RM_PASSWORD}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - PYTHONUNBUFFERED=1
    volumes:
      - logs:/var/log/
      - ./.env:/app/.env
    env_file:
      - .env
    depends_on:
      - postgres

  postgres:
    build:
      context: ./db
    env_file:
      - .env
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      - DB_PORT=${DB_PORT}
      - DB_REPL_USER=${DB_REPL_USER}
      - DB_REPL_PASSWORD=${DB_REPL_PASSWORD}
      - DB_REPL_HOST=${DB_REPL_HOST}
      - DB_HOST=${DB_HOST}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - logs:/var/log/ 
    
    #command: >
     # postgres
      #-c listen_addresses='*'
      #-c archive_mode=on
      #-c archive_command='cp %p /archive/%f'
      #-c max_wal_senders=10
      #-c wal_level=replica
      #-c wal_log_hints=on
     # -c log_directory='/var/log/'
      #-c log_filename='repl.log'
      #-c logging_collector=on
      #-c log_replication_commands=on
  
  postgres_replica:
    build:
      context: ./db_repl
    ports:
      - ${DB_REPL_PORT}:${DB_PORT}
    environment:
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/*
      until pg_basebackup -v -R -h ${DB_HOST} -p ${DB_PORT} -U ${DB_REPL_USER} -W -P -D /var/lib/postgresql/data
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chown -R postgres:postgres /var/lib/postgresql/data
      chmod 0750 /var/lib/postgresql/data
      su - postgres -c '/usr/lib/postgresql/15/bin/postgres -D /var/lib/postgresql/data'"
    env_file:
      - .env
    
    depends_on:
      - postgres

volumes:
  pg_data:
  logs:
